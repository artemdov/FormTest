{"version":3,"sources":["store/form.ts","Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["valueName","valueSecName","error","makeObservable","this","observable","Form","observer","console","log","useState","setValueName","setValueSecName","change","setChange","className","type","placeholder","value","onChange","e","target","onClick","length","formStore","ErrorForm","App","FormStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAmBe,M,WAXX,aAAe,yBAJfA,UAAY,GAIE,KAHdC,aAAe,GAGD,KAFdC,MAAQ,QAGJC,YAAeC,KAAK,CAChBF,MAAOG,M,6CAGf,WACQD,KAAKF,MAAQ,mB,aCIZI,EAAgCC,aAAS,WAClDC,QAAQC,IAAI,UAD4C,MAEtBC,mBAAiB,IAFK,mBAEjDV,EAFiD,KAEtCW,EAFsC,OAGhBD,mBAAiB,IAHD,mBAGjDT,EAHiD,KAGnCW,EAHmC,OAI5BF,oBAAkB,GAJU,mBAIjDG,EAJiD,KAIzCC,EAJyC,KAwBxD,OACI,qBAAKC,UAAU,UAAf,SAEI,sBAAKA,UAAU,OAAf,WACMF,GAAU,sBAAKE,UAAU,oBAAf,UAER,uBAAOA,UAAU,kBAAkBC,KAAK,OACjCC,YAAY,qBACZC,MAAOlB,EACPmB,SA3BO,SAACC,GAC3BT,EAAaS,EAAEC,OAAOH,UA4BV,uBAAOH,UAAU,qBAAqBC,KAAK,OACpCC,YAAY,6CACZC,MAAOjB,EACPkB,SA7BU,SAACC,GAC9BR,EAAgBQ,EAAEC,OAAOH,UA+Bb,wBAAQH,UAAU,SAASO,QA5Bf,WACxB,GAAItB,EAAUuB,OAAS,EACnB,OAAOf,QAAQC,IAAKe,EAAUC,aAElCX,GAAU,IAwBE,qDAIHD,GAAU,sBAAKE,UAAU,aAAf,8FACWf,EADX,YACwBC,GAC/B,wBAAQc,UAAU,eAAeO,QA5BhB,WAC7BR,GAAU,IA2BE,0BCpDLY,MARf,WACE,OACI,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAMY,UAAWA,OCMVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3813427b.chunk.js","sourcesContent":["import {makeAutoObservable, makeObservable, observable} from \"mobx\";\r\n\r\n\r\nclass FormStore {\r\n    valueName = ''\r\n    valueSecName = ''\r\n    error = 'Hello'\r\n\r\n    constructor() {\r\n        makeObservable(this,{\r\n            error: observable\r\n        })\r\n    }\r\n    ErrorForm () {\r\n            this.error = \"ERRROROROROR\"\r\n    }\r\n\r\n}\r\n\r\nexport default new FormStore()\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport {action, observable} from \"mobx\"\r\n\r\ntype FormStoreStateType = {\r\n    valueName: string,\r\n    valueSecName: string,\r\n    error: string,\r\n    ErrorForm: (error: string) => void\r\n}\r\n\r\nconst FormStore: FormStoreStateType = observable( {\r\n    valueName: '',\r\n    valueSecName: '',\r\n    error: '',\r\n\r\n\r\n    ErrorForm: action(function (error: string) {\r\n\r\n            FormStore.error = error\r\n        }\r\n    )\r\n\r\n    /!*if(FormStore.valueName.length < 3) {\r\n        FormStore.error = 'enter the required text'\r\n    } else if(FormStore.valueSecName.length < 3) {\r\n        FormStore.error = 'enter the required text'\r\n    } else if(FormStore.valueName === this.valueSecName){\r\n        FormStore.error = 'enter the required text'\r\n    } else{\r\n        return\r\n    }*!/\r\n\r\n})\r\n\r\nexport default FormStore*/\r\n","import React, {ChangeEvent, useState} from \"react\"\r\nimport './App.css'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport './Form.scss'\r\nimport formStore from './store/form'\r\n\r\ntype FormStoreType = {\r\n    valueSecName: string,\r\n    valueName: string,\r\n    error: string,\r\n    ErrorForm: (error: string) => void\r\n}\r\n\r\ntype FormPropsType = {\r\n    FormStore: FormStoreType\r\n}\r\n\r\n\r\nexport const Form: React.FC<FormPropsType> = observer(() => {\r\n    console.log('render')\r\n    const [valueName, setValueName] = useState<string>('')\r\n    const [valueSecName, setValueSecName] = useState<string>('')\r\n    const [change, setChange] = useState<boolean>(false)\r\n\r\n    const handleValueNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValueName(e.target.value)\r\n    }\r\n    const handleValueSecNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValueSecName(e.target.value)\r\n    }\r\n\r\n    const handleDisplayChange = () => {\r\n        if (valueName.length < 3) {\r\n            return console.log( formStore.ErrorForm())\r\n        }\r\n        setChange(true)\r\n    }\r\n    const handleDisplayModalChange = () => {\r\n        setChange(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Display'>\r\n\r\n            <div className='Form'>\r\n                {!change && <div className='Form-input-button'>\r\n\r\n                    <input className='Form-input-name' type=\"text\"\r\n                           placeholder=\"Имя\"\r\n                           value={valueName}\r\n                           onChange={handleValueNameChange}\r\n                    />\r\n                    <input className='Form-input-secName' type=\"text\"\r\n                           placeholder=\"Фамилия\"\r\n                           value={valueSecName}\r\n                           onChange={handleValueSecNameChange}\r\n                    />\r\n\r\n                    <button className='Button' onClick={handleDisplayChange}>Привет</button>\r\n                </div>\r\n                }\r\n\r\n                {change && <div className='Form-modal'>\r\n                    {`Здравствуйте, ${valueName} ${valueSecName}`}\r\n                    <button className='Button-modal' onClick={handleDisplayModalChange}>x</button>\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react';\nimport './App.css';\nimport {Form} from \"./Form\";\nimport FormStore from \"./store/form\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Form FormStore={FormStore} />\n      </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}